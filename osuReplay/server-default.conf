[global]
server.max_request_body_size: 5242880
engine.autoreload.on: False
server.socket_host: '0.0.0.0'
tools.encode.on: True
tools.encode.encoding: 'utf-8'
request.show_tracebacks: False


[/]
request.dispatch: cherrypy.dispatch.MethodDispatcher()
tools.response_headers.on: True
tools.response_headers.headers: [('Access-Control-Allow-Origin', 'ugrend.github.io')]

[General]
# we want to hash the ids of maps/replays eg: 1=1du02 this salt determines how to generate it (it should be something semi secure)
salt: 'putsomethingrandomhere'
# replay_dir is where replay files will be stored
replay_dir: 'replays'
# beatmap_dir is where beatmap/.osu files will be stored
beatmap_dir: 'songs'
# tmp_dir is a temp storage before moving to correct place
tmp_dir: 'tmp'

# this uses osu api calls so it requires a osu api key
osu_api_url: 'https://osu.ppy.sh/api/'
osu_api_key: 'ousapikeyhere'



# If this server is going store and look for unknown data
run_asset_server: True

# if run_asset_server is set to False, when data is required to be gathered it will look for it here
# if run_asset_server is set to True, this is ignored
asset_server: 'http://127.0.0.1:8080/api/assets'




[Database]
database: 'osu'
user: 'postgres'
host: 'localhost'
password: ''

[AssetServer]
allowed_ips: ['127.0.0.1']
# if presented with a map/etc that we dont know we need to get the details of it by downloading it from this url
beatmap_url: 'http://127.0.0.1:8080/osu'